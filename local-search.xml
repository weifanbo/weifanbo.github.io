<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vue介绍</title>
    <link href="/2023/09/08/vue%E4%BB%8B%E7%BB%8D-1/"/>
    <url>/2023/09/08/vue%E4%BB%8B%E7%BB%8D-1/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="vue介绍"><a href="#vue介绍" class="headerlink" title="vue介绍"></a>vue介绍</h2><p>vue是一套用来动态构建用户界面的渐进式 JavaScript 框架<br>①构建用户界面：把数据通过某种方式变成用户所看到的界面<br>②渐进式：vue可以自底向上逐层的应用，简单应用只需要一个轻量小巧的核心库，复杂应用可以引入各式各样的vue插件<a href="https://blog.csdn.net/m0_45070460/article/details/107539586">https://blog.csdn.net/m0_45070460/article/details/107539586</a></p><h2 id="vue特点"><a href="#vue特点" class="headerlink" title="vue特点"></a>vue特点</h2><p>遵循 MVVM 模式，什么是MVVM？<br>MVVM 本质上是 MVC （Model-View- Controller）的改进版。即模型-视图-视图模型。</p><p>模型model指的是后端传递的数据，视图view指的是所看到的页面。</p><p>视图模型viewModel是 mvvm 模式的核心，它是连接 view 和 model 的桥梁。它有两个方向：</p><p>将模型转化成视图，即将后端传递的数据转化成所看到的页面。实现的方式是：数据绑定 将视图转化成模型，即将所看到的页面转化成后端的数据。实现的方式是：DOM 事件监听</p><p>这两个方向都实现的，我们称之为数据的双向绑定</p><h2 id="Vue-周边生态"><a href="#Vue-周边生态" class="headerlink" title="Vue 周边生态"></a>Vue 周边生态</h2><p>vue-cli：vue 脚手架<br>vue-resource(axios)：ajax 请求<br>vue-router：路由<br>vuex：状态管理（它是 vue 的插件但是没有用 vue-xxx 的命名规则）<br>vue-lazyload：图片懒加载<br>vue-scroller：页面滑动相关<br>mint-ui：基于 vue 的 UI 组件库（移动端）<br>element-ui：基于 vue 的 UI 组件库（PC 端）</p>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初始vue</title>
    <link href="/2023/09/08/%E5%88%9D%E5%A7%8Bvue/"/>
    <url>/2023/09/08/%E5%88%9D%E5%A7%8Bvue/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a>前置工作</h2><p>1.给浏览器安装 Vue Devtools 插件</p><p>2.标签引入 Vue 包</p><p>3.(可选) 阻止 vue 在启动时生成生产提示 Vue.config.productionTip &#x3D; false</p><p>4.favicon 报错 需要将页签图标放在项目根路径，重新打开就有了(shfit+F5 强制刷新)</p><h2 id="vue-初体验"><a href="#vue-初体验" class="headerlink" title="vue 初体验"></a>vue 初体验</h2><p>1.想让 vue 工作，就必须创建一个 Vue 实例，且要传入一个配置对象</p><p>2.root 容器里的代码依然符合 html 规范，只不过混入了一些特殊的 Vue 语法</p><p>3.root 容器里的代码被称为 Vue 模板</p><p>4.Vue 实例与容器是一一对应的</p><p>5.真实开发中只有一个 Vue 实例，并且会配合着组件一起使用</p><p>6.中的 xxx 要写 js 表达式，且 xxx 可以自动读取到 data 中的所有属性<br>区分：js 表达式 和 js 语句<br>js 表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方<br>①a<br>②a+b<br>③fn(1)<br>④x&#x3D;&#x3D;&#x3D; y ? ‘1’ : ‘2’</p><p>js 语句<br>①if(){}<br>②for(){}</p><p>7.一旦 data 中的数据发生变化，那么模板中用到该数据的地方也会自动更新</p><h2 id="计数器实现"><a href="#计数器实现" class="headerlink" title="计数器实现"></a>计数器实现</h2><p>1.原生写法<br>&#x2F;&#x2F; 1. 获取 DOM 原生<br>const titleEl &#x3D; document.querySelector(“.title”);<br>const btnInEl &#x3D; document.querySelector(‘.increment’);<br>const btnDeEl &#x3D; document.querySelector(‘.decrement’);<br>&#x2F;&#x2F; 2. 默认设置的是 Hello World<br>let counter &#x3D; 0<br>&#x2F;&#x2F; 3. 设置 titleEl 的内容<br>titleEl.innerHTML &#x3D; counter;<br>&#x2F;&#x2F; 4. 监听按钮的点击<br>btnInEl.addEventListener(‘click’,(&#x3D;&gt;{<br>counter +&#x3D; 1;<br>titleEl.innerHTML &#x3D;counter;<br>})<br>btnDeEl.addEventListener(‘click’,(&#x3D;&gt;{<br>counter -&#x3D;1;<br>titleEl.innerHTML &#x3D; counter;<br>})</p><p>2.vue 实现</p><pre><code class="hljs"> &lt;div id=&quot;app&quot;&gt;   &lt;!-- vue指令: v-on:事件类型 --&gt;   &lt;button v-on:click=&quot;increment&quot;&gt;+&lt;/button&gt;   &lt;!-- 简写 比如: @click @keyup @keydown --&gt;   &lt;button @click=&quot;increment&quot;&gt;+&lt;/button&gt;   &#123;&#123; count &#125;&#125;   &lt;button v-on:click=&quot;decrement&quot;&gt;-&lt;/button&gt;   &lt;button @click=&quot;decrement&quot;&gt;-&lt;/button&gt; &lt;/div&gt; &lt;script&gt;   // 关闭生产提示   Vue.config.productionTip = false   var vm = new Vue(&#123;     el: &#39;#app&#39;,     // 数据     data: &#123;       count: 0     &#125;,     // 方法     methods: &#123;       increment()&#123;         // this =&gt; vue实例         this.count++       &#125;,       decrement()&#123;         this.count--       &#125;     &#125;   &#125;);</code></pre><h2 id="模板的理解"><a href="#模板的理解" class="headerlink" title="模板的理解"></a>模板的理解</h2><p>模板就是动态 html 页面，这里面包含了一些 js 语法代码</p><p>Vue 的模板语法分为两种，分别是：</p><p>【插值语法】双大括号表达式 （“Mustache”语法）【一个】<br>【指令语法】指令（以 v-开头的自定义标签属性）【很多】<br>插值语法：<br>功能：用于解析标签体内容，向页面输出数据<br>写法：，xxx 是 js 表达式，且可以直接读取到 data 中的所有属性，可以调用对象的方法<br>备注：里面写 js 表达式：有返回值的 js 代码，而不是 js 语句<br>指令语法：<br>功能：用于解析标签（包括：标签属性、标签体内容、绑定事件…）<br>举例：v-bind:href&#x3D;”xxx” 或 简写为 :href&#x3D;”xxx”，xxx 同样要写 js 表达式，且可以直接读取到 data 中的所有属性<br>备注：Vue 中有很多的指令，且形式都是：v-????</p><h2 id="指令语法：属性绑定-v-bind"><a href="#指令语法：属性绑定-v-bind" class="headerlink" title="指令语法：属性绑定 v-bind:"></a>指令语法：属性绑定 v-bind:</h2><p>功能：指定变化的属性值</p><p>完整写法：v-bind:xxx&#x3D;’yyy’ &#x2F;&#x2F; yyy 会作为表达式解析执行</p><p>简洁写法：:xxx&#x3D;’yyy’</p><h2 id="单向数据绑定"><a href="#单向数据绑定" class="headerlink" title="单向数据绑定"></a>单向数据绑定</h2><p>语法：v-bind:href &#x3D;”xxx” 或简写为 :href &#x3D;”xxx”<br>特点：数据只能从 data 流向页面</p><h2 id="双向数据绑定-指令-v-model"><a href="#双向数据绑定-指令-v-model" class="headerlink" title="双向数据绑定 指令 v-model"></a>双向数据绑定 指令 v-model</h2><p>语法：v-model:value&#x3D;”xxx” 或简写为 v-model&#x3D;”xxx”<br>特点：数据不仅能从 data 流向页面，还能从页面流向 data</p><p>v-model 应用:</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"></span><br><span class="language-xml">v-model:用来辅助开发者在不操作 DOM 的前提下，快速获取表单的数据<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>选择的省份是: </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">province</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&#x27;province&quot;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">&lt;option value=&quot;g&quot;&gt;--请选择--&lt;/option&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">&lt;option value=&quot;1&quot;&gt;上海&lt;/option&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">&lt;option value=&quot;2&quot;&gt;唐山&lt;/option&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">&lt;option value=&quot;3&quot;&gt;广州&lt;/option&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">&lt;option value=&quot;4&quot;&gt;北京&lt;/option&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">&lt;option value=&quot;5&quot;&gt;杭州&lt;/option&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">&lt;/select&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml"></span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">&lt;p&gt;您选中的是:[[sex&#125;J&lt;/p&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">&lt;input type=&quot;radio&quot; name=&quot;sex” v-model=&#x27;</span><span class="hljs-attr">sex</span>&#x27;<span class="hljs-attr">value</span>=<span class="hljs-string">&quot;man&quot;</span>&gt;</span></span><br><span class="language-xml">mantype=&quot;radio&quot;name=&quot;sex&quot;&lt;inputv-model=&#x27;sexvalue=&quot;woman&quot;&gt;woman</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您的爱好是: </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">loves</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">type=&quot;checkbox”name=&quot;game” v-model=loves value=&quot;你猜&quot;你猜</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox”name=&quot;</span><span class="hljs-attr">music</span>”<span class="hljs-attr">v-model</span>=<span class="hljs-string">loves</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;不告诉你&quot;</span>&gt;</span>不告诉你</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox”name=&quot;</span><span class="hljs-attr">basketball</span>”<span class="hljs-attr">v-model</span>=<span class="hljs-string">loves</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;库库吃&quot;</span>&gt;</span>库库吃</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox”name=&quot;</span><span class="hljs-attr">eatv-model</span>=<span class="hljs-string">loves</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;吃冰激凌&quot;</span>&gt;</span> 吃冰激凌 </span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox”name=&quot;</span><span class="hljs-attr">treenp</span>”<span class="hljs-attr">v-model</span>=<span class="hljs-string">loves</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;吃汉堡&quot;</span>&gt;</span>吃汉堡</span><br><span class="language-xml"></span><br><span class="language-xml">.number: 将输入值转化为数字类型</span><br><span class="language-xml">想要严格限制输入框只允许输入数字，请使用属性type=&quot;number&quot;</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model.number</span>=<span class="hljs-string">&#x27;first&#x27;</span> @<span class="hljs-attr">keyup</span>=<span class="hljs-string">&#x27;sum&#x27;</span>&gt;</span>+</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model.number</span>=<span class="hljs-string">&#x27;last&#x27;</span> @<span class="hljs-attr">keyup</span>=<span class="hljs-string">&#x27;sum&#x27;</span>&gt;</span> =</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">result</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  data () &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">return</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">msg</span>: 李</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    show () &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">msg</span>)</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">.trim 自动去除输入框前后(首尾)空格</span><br><span class="language-xml">如下: 如果直接在开头输入空格，或者是在末尾输入空格，是不会显示有输入内容的</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model.trim</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="指令语法：绑定事件监听-v-on"><a href="#指令语法：绑定事件监听-v-on" class="headerlink" title="指令语法：绑定事件监听 v-on"></a>指令语法：绑定事件监听 v-on</h2><p>完整写法:<br>v-on:click&#x3D;’xxx’<br>v-on:keyup&#x3D;’xxx(参数)’<br>v-on:keyup.enter&#x3D;’xxx’</p><p>简洁写法:<br>@click&#x3D;’xxx’<br>@keyup&#x3D;’xxx’<br>@keyup.enter&#x3D;’xxx’</p><p>事件修饰符<br>①prevent：阻止默认事件（常用）；<br>②stop：阻止事件冒泡（常用）；<br>③once：事件只触发一次（常用）；<br>④capture：使用事件的捕获模式；<br>⑤self：只有event.target是当前操作的元素时才触发事件；<br>⑥native:<br>关于 .native 官网解释：<br>你可能想在某个组件的根元素上监听一个原生事件。可以使用 v-on 的修饰符 .native</p><p>大白话：如果你想在某个组件的根元素上绑定事件，直接使用 @click&#x3D;‘‘function’ 是不生效的，我们可以添加.native修饰符 @click.native&#x3D;’‘function’’，也可以理解为该修饰符的作用就是把一个vue组件转化为一个普通的HTML标签，并且该修饰符对普通HTML标签是没有任何作用的。</p><h2 id="指令语法：内容渲染指令-v-text与v-html"><a href="#指令语法：内容渲染指令-v-text与v-html" class="headerlink" title="指令语法：内容渲染指令 v-text与v-html"></a>指令语法：内容渲染指令 v-text与v-html</h2><p>v-text<br>作用：向其所在的节点中渲染文本内容。<br>与插值语法的区别：v-text会替换掉节点中的内容，则不会。、</p><p>v-html<br>作用：向指定节点中渲染包含html结构的内容。<br>与插值语法的区别：<br>(1).v-html会替换掉节点中所有的内容，则不会。<br>(2).v-html可以识别html结构。<br>严重注意：v-html有安全性问题！！！！<br>(1). 在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击。<br>(2). 一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>1. 大括号表达式<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">msg</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-comment">&lt;!--textContent --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">msg.toUpperCase</span>()&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-comment">&lt;!--innerHTML --&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-comment">&lt;!--textContent --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;msg.toUpperCase()&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>2. 指令一： 强制数据绑定<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;imgUrl&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Vue&quot;</span>&gt;</span>  <span class="hljs-comment">&lt;!--无法显示图片，没有识别成js表达式 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-bind:src</span>=<span class="hljs-string">&quot;imgUrl&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Vue&quot;</span>&gt;</span> <span class="hljs-comment">&lt;!--属性值识别成js表达式 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;imgUrl&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Vue&quot;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>3. 指令二： 绑定事件监听<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;test1&quot;</span>&gt;</span>test1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;test1&quot;</span>&gt;</span>test1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        </span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;test2(&#x27;abc&#x27;)&quot;</span>&gt;</span>test2<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span> <span class="hljs-comment">&lt;!--可以传参数 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;test2(msg)&quot;</span>&gt;</span>test2<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;&lt;a href=&quot;http:www.baidu.com&quot;&gt;I Will Back!&lt;/a&gt;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">imgUrl</span>: <span class="hljs-string">&quot;https://cn.vuejs.org/images/logo.png&quot;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">test1</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;heheh&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">test2</span>(<span class="hljs-params">content</span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-title function_">alert</span>(content);</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="指令语法：条件渲染指令v-if"><a href="#指令语法：条件渲染指令v-if" class="headerlink" title="指令语法：条件渲染指令v-if"></a>指令语法：条件渲染指令v-if</h2><p>是控制元素是否加载到页面上（有性能开销）</p><p>适用于：切换频率较低的场景。</p><p>特点：不展示的DOM元素直接被移除。当条件不成立时, v-if 的所有子节点不会解析</p><p>注意：v-if可以和:v-else-if、v-else一起使用，但要求结构不能被 ‘打断’。</p><p>v-show是控制元素的显示与隐藏 （初始创建时加载一次）</p><p>切换频率较高的场景。<br>不展示的DOM元素未被移除，仅仅是使用样式隐藏掉</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&#x27;flag&#x27;</span>&gt;</span>海上月是天上月<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-else</span>&gt;</span>愿各位眼前人都是心上人<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span>优秀<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span>良好<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span>一般<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-else</span>=<span class="hljs-string">&quot;type === &#x27;D&#x27;&quot;</span>&gt;</span>差<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&#x27;flag&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1.实现一个简易的计算器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model.number</span>=<span class="hljs-string">&quot;n1&quot;</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;opt&quot;</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;+&quot;</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;-&quot;</span>&gt;</span>-<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;*&quot;</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;/&quot;</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model.number</span>=<span class="hljs-string">&quot;n2&quot;</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;=&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;calc&quot;</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;result&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">let</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">  <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">  <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">n1</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="language-javascript">  <span class="hljs-attr">n2</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="language-javascript">  <span class="hljs-attr">opt</span>: <span class="hljs-string">&#x27;+&#x27;</span>,</span><br><span class="language-javascript">  <span class="hljs-attr">result</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">  &#125;,</span><br><span class="language-javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">calc</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-comment">// switch(this.opt)&#123;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//   case &#x27;+&#x27;: </span></span><br><span class="language-javascript">    <span class="hljs-comment">//   this.result = this.n1 + this.n2</span></span><br><span class="language-javascript">    <span class="hljs-comment">//   break;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//   case &#x27;-&#x27;: </span></span><br><span class="language-javascript">    <span class="hljs-comment">//   this.result = this.n1 - this.n2</span></span><br><span class="language-javascript">    <span class="hljs-comment">//   break;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//   case &#x27;*&#x27;: </span></span><br><span class="language-javascript">    <span class="hljs-comment">//   this.result = this.n1 * this.n2</span></span><br><span class="language-javascript">    <span class="hljs-comment">//   break;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//   case &#x27;/&#x27;: </span></span><br><span class="language-javascript">    <span class="hljs-comment">//   this.result = this.n1 / this.n2</span></span><br><span class="language-javascript">    <span class="hljs-comment">//   break;</span></span><br><span class="language-javascript">    <span class="hljs-comment">// &#125;</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// eval: 将内容当作js来解析执行 存在安全隐患 </span></span><br><span class="language-javascript">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">result</span> = <span class="hljs-built_in">eval</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">n1</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">opt</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">n2</span>)</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript">  &#125;,</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>定义：对要显示的数据进行特定格式化后再显示（适用于一些简单逻辑的处理）。<br>语法：<br>​ 1.注册过滤器：Vue.filter (name,callback) 或 new Vue { filters:{} }<br>  2.注册过滤器 v-bind:属性 &#x3D; “xxx | 过滤器名”<br>备注：<br>​ 1.过滤器也可以接收额外参数、多个过滤器也可以串联<br>​ 2.并没有改变原本的数据, 是产生新的对应的数据</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"></span><br><span class="language-xml">&lt; !--准备好一个容器--&gt;</span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>显示格式化后的时间<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 计算属性实现 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是：</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">fmtTime</span> &#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- methods实现 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是：</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">getFmtTime</span>() &#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 过滤器实现 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是：</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">time</span> | timeFormater&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 过滤器实现（传参） --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是：</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">time</span> | timeFormater(<span class="hljs-name">&#x27;YYYY_MM_DD&#x27;</span>) | mySlice&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">:x</span>=<span class="hljs-string">&quot;msg | mySlice&quot;</span>&gt;</span>哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">&lt;/div &gt;</span><br><span class="language-xml"></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root2&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">msg</span> | mySlice&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">&lt;/body &gt;</span><br><span class="language-xml"></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//全局过滤器</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-string">&#x27;mySlice&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">return</span> value.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">data</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">time</span>:<span class="hljs-number">1621561377603</span>, <span class="hljs-comment">//时间戳</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">msg</span>:<span class="hljs-string">&#x27;你好，vue&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title function_">fmtTime</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">time</span>).<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title function_">getFmtTime</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">time</span>).<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//局部过滤器</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">filters</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title function_">timeFormater</span>(<span class="hljs-params">value, str = <span class="hljs-string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// console.log(&#x27;@&#x27;,value)</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(value).<span class="hljs-title function_">format</span>(str)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#root2&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">data</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">msg</span>:<span class="hljs-string">&#x27;hello,vue!&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
